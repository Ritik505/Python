import turtle
import time
import random

delay = 0.1
score = 0
high_score = 0

window_screen = turtle.Screen()
window_screen.title("Snake")
window_screen.bgcolor("#000")
window_screen.setup(width=600, height=600)
window_screen.tracer(0)

snake_head = turtle.Turtle()
snake_head.shape("square")
snake_head.color("white")
snake_head.penup()
snake_head.goto(0, 0)
snake_head.direction = "stop"

snake_food = turtle.Turtle()
shapes = random.choice(['circle'])
colors = random.choice(['#11f005'])
snake_food.speed(0)
snake_food.shape(shapes)
snake_food.color(colors)
snake_food.penup()
snake_food.goto(0, 100)

pen = turtle.Turtle()
pen.speed(0)
pen.shape("square")
pen.color("white")
pen.penup()
pen.hideturtle()
pen.goto(0, 250)
pen.write("Score: 0  High Score: 0", align="center", font=("Courier", 24, "normal"))

def up():
    if snake_head.direction != "down":
        snake_head.direction = "up"

def down():
    if snake_head.direction != "up":
        snake_head.direction = "down"

def left():
    if snake_head.direction != "right":
        snake_head.direction = "left"

def right():
    if snake_head.direction != "left":
        snake_head.direction = "right"

def move():
    if snake_head.direction == "up":
        y = snake_head.ycor()
        snake_head.sety(y + 20)
    if snake_head.direction == "down":
        y = snake_head.ycor()
        snake_head.sety(y - 20)
    if snake_head.direction == "left":
        x = snake_head.xcor()
        snake_head.setx(x - 20)
    if snake_head.direction == "right":
        x = snake_head.xcor()
        snake_head.setx(x + 20)

window_screen.listen()
window_screen.onkeypress(up, "w")
window_screen.onkeypress(down, "s")
window_screen.onkeypress(left, "a")
window_screen.onkeypress(right, "d")

snake_segments = []

while True:
    window_screen.update()
    
    if snake_head.xcor() > 290 or snake_head.xcor() < -290 or snake_head.ycor() > 290 or snake_head.ycor() < -290:
        time.sleep(1)
        snake_head.goto(0, 0)
        snake_head.direction = "stop"
        
        for segment in snake_segments:
            segment.goto(1000, 1000)
        
        snake_segments.clear()
        score = 0
        delay = 0.1
        pen.clear()
        pen.write(f"Score: {score}  High Score: {high_score}", align="center", font=("Courier", 24, "normal"))

    if snake_head.distance(snake_food) < 20:
        x = random.randint(-290, 290)
        y = random.randint(-290, 290)
        snake_food.goto(x, y)

        new_segment = turtle.Turtle()
        new_segment.speed(0)
        new_segment.shape("square")
        new_segment.color("green")
        new_segment.penup()
        snake_segments.append(new_segment)

        delay -= 0.001
        score += 10

        if score > high_score:
            high_score = score

        pen.clear()
        pen.write(f"Score: {score}  High Score: {high_score}", align="center", font=("Courier", 24, "normal"))

    for i in range(len(snake_segments) - 1, 0, -1):
        x = snake_segments[i - 1].xcor()
        y = snake_segments[i - 1].ycor()
        snake_segments[i].goto(x, y)

    if len(snake_segments) > 0:
        x = snake_head.xcor()
        y = snake_head.ycor()
        snake_segments[0].goto(x, y)

    move()

    for segment in snake_segments:
        if segment.distance(snake_head) < 20:
            time.sleep(1)
            snake_head.goto(0, 0)
            snake_head.direction = "stop"

            for segment in snake_segments:
                segment.goto(1000, 1000)

            snake_segments.clear()
            score = 0
            delay = 0.1
            pen.clear()
            pen.write(f"Score: {score}  High Score: {high_score}", align="center", font=("Courier", 24, "normal"))

    time.sleep(delay)

window_screen.mainloop()

